version: '3'

services:
  # Backend service
  db:
    image: postgres:14
    hostname: db
    container_name: greener-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=ecochallenge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app-network:
        aliases:
          - db

  backend:
    build: ./backend
    container_name: greener-backend
    hostname: backend
    command: >
      bash -c "python manage.py wait_for_db &&
               python manage.py migrate &&
               python manage.py create_waste_test_data &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://postgres:postgres@db:5432/ecochallenge
      - DJANGO_SETTINGS_MODULE=config.settings_docker
      - ALLOWED_HOSTS=*
    networks:
      app-network:
        aliases:
          - backend

  # Mobile app service
  mobile-app:
    build: ./MobileApp
    container_name: greener-mobile
    hostname: mobile-app
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    environment:
      - NODE_ENV=development
      - EXPO_DOCKER_BACKEND_URL=http://backend:8000
      - EXPO_TUNNEL=true
      - DEBUG=true
      - EXPO_DEBUG=true
      - REACT_NATIVE_BACKEND_URL=http://backend:8000
    volumes:
      - ./MobileApp:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      app-network:
        aliases:
          - mobile-app

networks:
  app-network:
    driver: bridge
    name: greener-network

volumes:
  postgres_data: 