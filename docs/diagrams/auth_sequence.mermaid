sequenceDiagram
    autonumber
    participant Client
    participant APIView
    participant AuthService
    participant UserModel
    participant TokenModel
    participant SessionStore
    
    %% Registration Flow
    Client->>APIView: POST /api/auth/register (username, email, password)
    APIView->>AuthService: signUp(username, email, password)
    AuthService->>UserModel: create_user(username, email, password)
    UserModel-->>AuthService: user
    AuthService->>TokenModel: create(user)
    TokenModel-->>AuthService: token
    AuthService-->>APIView: UserAuthToken (token, user_id, expiry)
    APIView-->>Client: 201 Created (token, user_id, expiry)
    
    %% Login Flow
    Client->>APIView: POST /api/auth/login (email, password)
    APIView->>AuthService: logIn(email, password)
    AuthService->>UserModel: authenticate(email, password)
    UserModel-->>AuthService: user or None
    alt Authentication Successful
        AuthService->>TokenModel: get_or_create(user)
        TokenModel-->>AuthService: token
        AuthService-->>APIView: UserAuthToken (token, user_id, expiry)
        APIView-->>Client: 200 OK (token, user_id, expiry)
    else Authentication Failed
        AuthService-->>APIView: None
        APIView-->>Client: 401 Unauthorized
    end
    
    %% Google OAuth Flow
    Client->>APIView: POST /api/auth/google (googleToken)
    APIView->>AuthService: logInViaGoogle(googleToken)
    AuthService->>AuthService: Verify token with Google
    alt Google Authentication Successful
        AuthService->>UserModel: get_or_create_user_from_google(googleData)
        UserModel-->>AuthService: user
        AuthService->>OAuth: get_or_create(user, 'google', googleUserId)
        OAuth-->>AuthService: oauth_record
        AuthService->>TokenModel: create(user)
        TokenModel-->>AuthService: token
        AuthService-->>APIView: UserAuthToken (token, user_id, expiry)
        APIView-->>Client: 200 OK (token, user_id, expiry)
    else Google Authentication Failed
        AuthService-->>APIView: None
        APIView-->>Client: 401 Unauthorized
    end
    
    %% Token Validation
    Client->>APIView: GET /api/protected-resource (Authorization: Token xyz)
    APIView->>AuthService: validateToken(token)
    AuthService->>TokenModel: get(key=token)
    TokenModel-->>AuthService: token or None
    alt Token Valid
        AuthService-->>APIView: True, user
        APIView->>APIView: Process request with user
        APIView-->>Client: 200 OK (resource data)
    else Token Invalid
        AuthService-->>APIView: False, None
        APIView-->>Client: 401 Unauthorized
    end
    
    %% Logout
    Client->>APIView: POST /api/auth/logout (Authorization: Token xyz)
    APIView->>AuthService: revokeToken(token)
    AuthService->>TokenModel: delete(key=token)
    TokenModel-->>AuthService: Success
    AuthService-->>APIView: Success
    APIView-->>Client: 200 OK
    
    %% Password Reset Request
    Client->>APIView: POST /api/auth/reset-password (email)
    APIView->>AuthService: generatePasswordResetToken(email)
    AuthService->>UserModel: get(email=email)
    UserModel-->>AuthService: user or None
    alt User Found
        AuthService->>AuthService: Generate reset token
        AuthService->>AuthService: Send email with reset link
        AuthService-->>APIView: Success
        APIView-->>Client: 200 OK (Reset email sent)
    else User Not Found
        AuthService-->>APIView: User not found
        APIView-->>Client: 404 Not Found
    end
    
    %% Password Reset Confirmation
    Client->>APIView: POST /api/auth/reset-password/confirm (token, new_password)
    APIView->>AuthService: resetPasswordWithToken(token, new_password)
    AuthService->>AuthService: validatePasswordResetToken(token)
    alt Token Valid
        AuthService->>UserModel: set_password(new_password)
        UserModel-->>AuthService: Success
        AuthService-->>APIView: Success
        APIView-->>Client: 200 OK (Password updated)
    else Token Invalid
        AuthService-->>APIView: Invalid token
        APIView-->>Client: 400 Bad Request
    end